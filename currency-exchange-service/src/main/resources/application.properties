spring.application.name=currency-exchange
server.port=8000

spring.config.import=optional:configserver:${SPRING_CLOUD_URI}:8888
spring.profiles.active=${APPLICATION_ENV}
spring.cloud.config.profile=${APPLICATION_ENV}

spring.jpa.show-sql=true
spring.datasource.url=jdbc:h2:mem:testdb
spring.datasource.username=root
spring.datasource.password=root
spring.h2.console.enabled=true
spring.jpa.defer-datasource-initialization=true

eureka.client.serviceUrl.defaultZone=${EUREKA_URI}:8761/eureka
eureka.instance.prefer-ip-address=true

resilience4j.retry.instances.sample-api.wait-duration=1s
resilience4j.retry.instances.sample-api.enable-exponential-backoff=true
resilience4j.retry.instances.sample-api.max-attempts=5

resilience4j.retry.instances.default.wait-duration=1s
resilience4j.retry.instances.default.enable-exponential-backoff=true
resilience4j.retry.instances.default.max-attempts=5

resilience4j.circuitbreaker.instances.default.failure-rate-threshold=90

resilience4j.ratelimiter.instances.default.limit-for-period=2
resilience4j.ratelimiter.instances.default.limit-refresh-period=10s

resilience4j.bulkhead.instances.default.max-concurrent-calls=10

# Circuit Breaker Configuration
resilience4j.circuitbreaker.instances.myService.failure-rate-threshold=50
resilience4j.circuitbreaker.instances.myService.sliding-window-size=10
resilience4j.circuitbreaker.instances.myService.wait-duration-in-open-state=10000

# Retry Configuration
resilience4j.retry.instances.myService.max-attempts=3
resilience4j.retry.instances.myService.wait-duration=500ms

# Rate Limiter Configuration
resilience4j.ratelimiter.instances.myService.limit-for-period=5
resilience4j.ratelimiter.instances.myService.limit-refresh-period=1s

# Bulkhead Configuration
resilience4j.bulkhead.instances.myService.max-concurrent-calls=3
resilience4j.bulkhead.instances.myService.max-wait-duration=0

# Time Limiter Configuration
resilience4j.timelimiter.instances.myService.timeout-duration=2s

#Observability and monitoring
management.tracing.enabled=true
management.tracing.sampling.probability=1.0
logging.pattern.level=%5p [${spring.application.name:},%X{traceId:-},%X{spanId:-}]

## KUBERNETES
management.endpoint.health.probes.enabled=true
management.health.livenessState.enabled=true
management.health.readinessState.enabled=true

# Zipkin configuration
management.zipkin.tracing.endpoint=${ZIPKIN_URI}:9411/api/v2/spans
management.zipkin.tracing.encoding=JSON

# METRICS PROMETHEUS
management.endpoints.web.exposure.include=health,info,prometheus
management.endpoint.prometheus.enabled=true

# OTLP exporter endpoint (Tempo service in k8s)
management.otlp.tracing.endpoint=${TEMPO_URI}

# Spring Cloud Stream configuration
spring.cloud.stream.bindings.currency-out-0.destination=currency-service

spring.rabbitmq.host=${RABBIT_HOST}
spring.rabbitmq.port=${RABBIT_PORT}
spring.rabbitmq.username=${RABBIT_USERNAME}
spring.rabbitmq.password=${RABBIT_PASSWORD}
spring.rabbitmq.connection-timeout=30000
